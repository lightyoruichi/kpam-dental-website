---
import PostHog from './PostHog.astro';

export interface Props {
  title: string;
  description: string;
  keywords?: string;
  canonical?: string;
  ogTitle?: string;
  ogDescription?: string;
  ogImage?: string;
  ogType?: string;
  ogUrl?: string;
  structuredData?: object;
  additionalMeta?: Array<{
    name?: string;
    property?: string;
    content: string;
  }>;
}

const {
  title,
  description,
  keywords = "revenue operations, growth services, B2B marketing tools, funnel optimization, sales automation",
  canonical,
  ogTitle = title,
  ogDescription = description,
  ogImage = "https://mimrgrowthlab.com/og.png",
  ogType = "website",
  ogUrl = canonical || Astro.url.href,
  structuredData,
  additionalMeta = []
} = Astro.props;
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <meta name="description" content={description} />
  <link rel="icon" type="image/x-icon" href="/assets/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/assets/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon-16x16.png" />
  <link rel="manifest" href="/assets/site.webmanifest" />
  <meta name="robots" content="index, follow" />
  <meta name="keywords" content={keywords} />
  <meta name="author" content="Harinder Singh" />
  <meta name="publisher" content="MIMR Growth Lab" />
  {canonical && <link rel="canonical" href={canonical} />}

  <!-- Open Graph / Facebook -->
  <meta property="og:title" content={ogTitle} />
  <meta property="og:description" content={ogDescription} />
  <meta property="og:site_name" content="MIMR Growth Lab" />
  <meta property="og:locale" content="en_US" />
  <meta property="og:image" content={ogImage} />
  <meta property="og:image:alt" content="MIMR Growth Lab - Revenue Operations Consultant" />
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />
  <meta property="og:type" content={ogType} />
  <meta property="og:url" content={ogUrl} />

  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:site" content="@mimrgrowthlab" />
  <meta name="twitter:creator" content="@lightyoruichi" />
  <meta name="twitter:title" content={ogTitle} />
  <meta name="twitter:description" content={ogDescription} />
  <meta name="twitter:image" content={ogImage} />
  <meta name="twitter:image:alt" content="MIMR Growth Lab - Revenue Operations Consultant" />

  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,400;1,500&display=swap"
    rel="stylesheet"
  />
  
  <!-- Alpine.js -->
  <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
  
  <!-- Performance optimizations -->
  <link rel="dns-prefetch" href="//www.googletagmanager.com" />
  <link rel="dns-prefetch" href="//tally.so" />
  <link rel="dns-prefetch" href="//us.i.posthog.com" />
  <meta name="theme-color" content="#000000" />
  <meta name="color-scheme" content="dark" />

  <!-- Google Tag Manager -->
  <script is:inline>
    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-TZVBZM6N');
  </script>
  <!-- End Google Tag Manager -->

  <!-- PostHog Analytics -->
  <PostHog />
  <!-- End PostHog Analytics -->

  <!-- Additional Meta Tags -->
  {additionalMeta.map(meta => (
    meta.property ? (
      <meta property={meta.property} content={meta.content} />
    ) : (
      <meta name={meta.name} content={meta.content} />
    )
  ))}

  <!-- Structured Data -->
  {structuredData && (
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
  )}
</head>
