---
import BaseLayout from '../components/BaseLayout.astro';
import ToolCardWithActions from '../components/ToolCardWithActions.astro';
import StructuredData from '../components/StructuredData.astro';
import Icon from '../components/Icon.svelte';

// Fetch tools data from API
let tools = [];
try {
  const response = await fetch(`${Astro.url.origin}/api/tools.json`);
  if (response.ok) {
    tools = await response.json();
  } else {
    console.error('Failed to fetch tools from API');
  }
} catch (error) {
  console.error('Error fetching tools:', error);
}

// Ensure tools have required properties to prevent runtime errors
const validatedTools = tools.map((tool: any) => ({
	id: tool.id || '',
	title: tool.title || '',
	description: tool.description || '',
	category: tool.category || '',
	difficulty: tool.difficulty || '',
	estimatedTime: tool.estimatedTime || '',
	tags: Array.isArray(tool.tags) ? tool.tags : [],
	content: tool.content || ''
}));

// Get unique categories and tags with error handling
const categories = [...new Set(validatedTools.map((tool: any) => tool.category).filter(Boolean))];
const allTags = [...new Set(validatedTools.flatMap((tool: any) => Array.isArray(tool.tags) ? tool.tags : []).filter(Boolean))];

// Show all tools since we have client-side search
// Note: If you need pagination back, you can restore this later
const paginatedTools = validatedTools;
const totalPages = 1;
const currentPage = 1;
const startIndex = 0;
const endIndex = validatedTools.length;


// Breadcrumb data for structured data
const breadcrumbData = [
  { name: "Home", url: "https://mimrgrowthlab.com" },
  { name: "Tools", url: "https://mimrgrowthlab.com/tools" }
];

// Helper function to get related tool titles
function getRelatedToolTitles(relatedToolIds: string[]): string[] {
  return relatedToolIds
    .map(id => validatedTools.find(tool => tool.id === id)?.title)
    .filter(Boolean) as string[];
}

// Structured data for tools page
const structuredData = [
  {
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": [
      {
        "@type": "Question",
        "name": "Are these AI marketing tools really free?",
        "acceptedAnswer": {
          "@type": "Answer",
          "text": "Yes, all tools are completely free to use. No sign-up required, no hidden costs."
        }
      },
      {
        "@type": "Question",
        "name": "How do I use these marketing tools?",
        "acceptedAnswer": {
          "@type": "Answer",
          "text": "Click 'Run in ChatGPT (MIMR GPT)' to open our custom AI assistant. Then type the command shown (click to copy) to execute the specific tool with guided step-by-step instructions."
        }
      },
      {
        "@type": "Question",
        "name": "What makes these tools different?",
        "acceptedAnswer": {
          "@type": "Answer",
          "text": "Our tools work best with our custom GPT that asks you the right questions and walks you through each framework step-by-step. No more guessing what to input next."
        }
      },
      {
        "@type": "Question",
        "name": "Can I use these tools without the custom GPT?",
        "acceptedAnswer": {
          "@type": "Answer",
          "text": "Yes! Click on any tool to view the full framework content. You can copy and paste it into any AI platform, though our custom GPT provides the best guided experience."
        }
      }
    ]
  }
];
---

<BaseLayout
	title="Free Revenue Operations Tools | AI-Powered Growth Tools | MIMR Growth Lab"
	description="Free AI-powered revenue operations tools for B2B growth. Funnel analysis, attribution setup, sales automation. No sign-up required. Get results today."
	canonical="https://mimrgrowthlab.com/tools"
	keywords="revenue operations tools, free AI tools, funnel analysis, sales automation, growth tools, B2B marketing tools"
	structuredData={structuredData}
	currentPage="tools"
	tallyScript={false}
>
	<!-- Optimized Structured Data -->
	<StructuredData 
		type="toolsPage" 
		pageData={{
			title: "Free Revenue Operations Tools",
			description: "AI-powered tools for B2B growth and optimization. No sign-up required.",
			url: "https://mimrgrowthlab.com/tools",
			tools: validatedTools,
			faqData: [
				{
					question: "Are these revenue operations tools really free?",
					answer: "Yes, all tools are completely free to use. No sign-up required, no hidden costs."
				},
				{
					question: "How do I use these revenue operations tools?",
					answer: "Click 'Run in ChatGPT (MIMR GPT)' to open our custom AI assistant. Then type the command shown (click to copy) to execute the specific tool with guided step-by-step instructions."
				},
				{
					question: "What makes these tools different?",
					answer: "Our tools work best with our custom GPT that asks you the right questions and walks you through each framework step-by-step. No more guessing what to input next."
				},
				{
					question: "Can I use these tools without the custom GPT?",
					answer: "Yes! Click on any tool to view the full framework content. You can copy and paste it into any AI platform, though our custom GPT provides the best guided experience."
				}
			]
		}}
	/>
	<!-- Breadcrumb structured data -->
	<StructuredData type="breadcrumbs" breadcrumbs={breadcrumbData} />
					<!-- HERO SECTION -->
					<section aria-labelledby="hero-heading" class="text-center" role="banner">
						<h1 id="hero-heading" class="text-3xl md:text-4xl mb-4">Free Revenue Operations Tools</h1>
					<h2 class="text-xl md:text-2xl mb-6 text-red-500">AI-powered tools for B2B growth and optimization</h2>
					<p class="text-base md:text-lg leading-relaxed max-w-3xl mx-auto mb-6">
						Access professional-grade revenue operations tools directly on this page. Search, filter, copy to clipboard, and share. No external links, no sign-ups required.
					</p>
					<p class="text-sm text-gray-400 mt-4">Enhanced with search, filtering, and copy functionality</p>
					<div class="mt-6 text-sm text-gray-300 max-w-4xl mx-auto">
						<p>Our collection includes tools for <strong>funnel analysis</strong>, <strong>attribution setup</strong>, <strong>sales automation</strong>, <strong>competitive intelligence</strong>, and <strong>revenue optimization</strong>. Each tool is designed to help B2B founders and growth teams make data-driven decisions and execute faster.</p>
						<p class="mt-4">Ready for comprehensive revenue operations help? <a href="/services" class="text-red-500 hover:underline" onclick="if(window.posthog){window.posthog.capture('services_link_clicked', {page: 'tools', link_type: 'text_link'});}">Learn about our 90-day growth intensive</a>.</p>
					</div>
				</section>

								<!-- SIMPLIFIED SEARCH -->
				<section class="space-y-6" role="search" aria-label="Search tools">
					<div class="relative">
						<label for="searchInput" class="block text-sm font-medium text-gray-300 mb-2">Search tools</label>
						<div class="relative">
							<input 
								type="text" 
								id="searchInput"
								name="search"
								placeholder="🔍 Search tools by name, description, or tags..."
								class="w-full bg-gray-800 border border-gray-600 text-white px-4 py-3 pl-12 rounded-lg focus:border-red-500 focus:outline-none focus:ring-2 focus:ring-red-500/20 transition-all"
								value=""
								aria-describedby="searchHelp"
								autocomplete="off"
								spellcheck="false"
							/>
							<div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
								<svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
								</svg>
							</div>
							<button 
								id="clearSearch"
								type="button"
								class="absolute inset-y-0 right-0 pr-3 items-center text-zinc-400 hover:text-white transition-colors focus:outline-none focus:text-white hidden"
								aria-label="Clear search"
							>
								<svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
								</svg>
							</button>
						</div>
						<div id="searchHelp" class="text-xs text-gray-500 mt-1">Search across all tools instantly</div>
					</div>
					
					<!-- Search Results Count -->
					<div id="searchResults" class="flex items-center justify-between text-sm text-gray-400">
						<div>
							Showing <span class="text-white font-medium">{startIndex + 1}-{Math.min(endIndex, validatedTools.length)}</span> of <span class="text-white font-medium">{validatedTools.length}</span> tools
							{totalPages > 1 && (
								<span class="ml-2 text-gray-500">(Page {currentPage} of {totalPages})</span>
							)}
						</div>
						<div class="text-xs">
							Press <kbd class="px-2 py-1 bg-gray-700 rounded text-xs">⌘K</kbd> to focus search
						</div>
					</div>
				</section>

				<!-- TOOLS GRID -->
				<section aria-labelledby="tools-grid-heading" role="region">
					<h2 id="tools-grid-heading" class="sr-only">Available Tools</h2>
					<div class="space-y-6">
						{paginatedTools.map((tool: any) => (
							<article class="tool-card group bg-zinc-900/50 border border-zinc-800 hover:border-zinc-700 rounded-xl transition-all duration-300 hover:bg-zinc-900/80 cursor-pointer" role="article" aria-labelledby={`tool-title-${tool.id}`} data-tool-id={tool.id}>
								<div class="p-6">
									<!-- Article Header -->
									<div class="mb-4">
										<div class="flex items-center gap-3 text-sm text-zinc-400 mb-3">
											<span class="px-2 py-1 bg-zinc-800 rounded-md text-xs font-medium">{tool.category}</span>
											<span class="text-zinc-500">•</span>
											<span>{tool.estimatedTime}</span>
											<span class="text-zinc-500">•</span>
											<span class="capitalize">{tool.difficulty}</span>
										</div>
										
										<h3 id={`tool-title-${tool.id}`} class="text-xl font-semibold text-white mb-3 group-hover:text-red-400 transition-colors">
											{tool.title}
										</h3>
										
										<p class="text-zinc-300 leading-relaxed mb-4">
											{tool.description}
										</p>
										
										<!-- Tags - Minimal -->
										{tool.tags.length > 0 && (
											<div class="flex flex-wrap gap-2 mb-4">
											{tool.tags.slice(0, 3).map((tag: string) => (
													<span class="text-xs text-zinc-400 px-2 py-1 bg-zinc-800/50 rounded border border-zinc-700/50">
													{tag}
												</span>
											))}
											{tool.tags.length > 3 && (
													<span class="text-xs text-zinc-500">+{tool.tags.length - 3} more</span>
											)}
										</div>
										)}
										
										<!-- Related Tools - Minimal -->
										{tool.related_tools && tool.related_tools.length > 0 && (
											<div class="text-sm text-zinc-400 mb-4">
												Related: {getRelatedToolTitles(tool.related_tools).slice(0, 2).join(", ")}
												{tool.related_tools.length > 2 && <span class="text-zinc-500"> +{tool.related_tools.length - 2} more</span>}
									</div>
										)}
								</div>

									<!-- Action Section -->
									<div class="flex items-center justify-between pt-4 border-t border-zinc-800">
									<a 
											href={`/tools/${tool.id}`}
											class="inline-flex items-center gap-2 text-sm font-medium text-white hover:text-red-400 transition-colors group/link"
											onclick={`if(window.posthog){window.posthog.capture('tool_card_clicked', {tool_id: '${tool.id}', tool_title: '${tool.title}', page: 'tools'});}`}
										>
											Read tool
											<Icon icon="mdi:arrow-right" class="w-4 h-4 transition-transform group-hover/link:translate-x-0.5" />
										</a>
										
										<!-- Quick Launch Icons -->
										<div class="flex items-center gap-2">
											<span class="text-xs text-zinc-500 mr-2">Quick launch:</span>
											<button 
												class="ai-platform-btn-minimal p-1.5 bg-zinc-800 hover:bg-green-600 border border-zinc-700 hover:border-green-500 rounded transition-all duration-200"
												data-platform="chatgpt"
												data-tool-id={tool.id}
												data-tool-title={tool.title}
												data-url="https://chat.openai.com/g/g-688d0d2733948191bc9f2f79cfc0aba2"
												data-command={`Run tool: ${tool.id}`}
												title="Launch in ChatGPT"
												onclick={`if(window.posthog){window.posthog.capture('ai_platform_launch', {platform: 'chatgpt', tool_id: '${tool.id}', tool_title: '${tool.title}', page: 'tools'});}`}
											>
												<Icon icon="simple-icons:openai" class="w-4 h-4" />
											</button>
											<button 
												class="ai-platform-btn-minimal p-1.5 bg-zinc-800 hover:bg-orange-600 border border-zinc-700 hover:border-orange-500 rounded transition-all duration-200"
												data-platform="claude"
												data-tool-id={tool.id}
												data-tool-title={tool.title}
												data-url="https://claude.ai"
												data-command={`Load and execute this business framework: https://mimrgrowthlab.com/tools/${tool.id}

My Business Context:
- Business Name: [YOUR_BUSINESS]
- Stage: [MVP/PMF/Scaling]
- Industry: [YOUR_INDUSTRY]
- Current Challenge: [SPECIFIC_CHALLENGE]

Please guide me through each section systematically.`}
												title="Launch in Claude"
												onclick={`if(window.posthog){window.posthog.capture('ai_platform_launch', {platform: 'claude', tool_id: '${tool.id}', tool_title: '${tool.title}', page: 'tools'});}`}
											>
												<Icon icon="simple-icons:anthropic" class="w-4 h-4" />
											</button>
											<button 
												class="ai-platform-btn-minimal p-1.5 bg-zinc-800 hover:bg-blue-500 border border-zinc-700 hover:border-blue-400 rounded transition-all duration-200"
												data-platform="gemini"
												data-tool-id={tool.id}
												data-tool-title={tool.title}
												data-url="https://gemini.google.com"
												data-command={`Analyze this business tool and guide me through it: https://mimrgrowthlab.com/tools/${tool.id}

My Business Context:
- Business Name: [YOUR_BUSINESS]
- Stage: [MVP/PMF/Scaling]
- Industry: [YOUR_INDUSTRY]
- Current Challenge: [SPECIFIC_CHALLENGE]

Please execute each step and provide insights.`}
												title="Launch in Gemini"
												onclick={`if(window.posthog){window.posthog.capture('ai_platform_launch', {platform: 'gemini', tool_id: '${tool.id}', tool_title: '${tool.title}', page: 'tools'});}`}
											>
												<Icon icon="simple-icons:googlegemini" class="w-4 h-4" />
											</button>
										</div>
									</div>
								</div>
							</article>
						))}
					</div>

					{validatedTools.length === 0 && (
						<div class="text-center py-12">
							<p class="text-gray-400 text-lg">No tools available.</p>
						</div>
					)}
					
					{/* Pagination Controls */}
					{totalPages > 1 && (
						<div class="flex justify-center items-center space-x-2 mt-8" role="navigation" aria-label="Pagination">
							{/* Previous Page */}
							<a 
								href={currentPage > 1 ? `?page=${currentPage - 1}` : '#'}
								class={`px-3 py-2 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-900 ${
									currentPage > 1 
										? 'bg-gray-700 hover:bg-gray-600 text-white' 
										: 'bg-gray-800 text-gray-500 cursor-not-allowed'
								}`}
								aria-label="Previous page"
								{...(currentPage <= 1 && { 'aria-disabled': 'true' })}
							>
								<Icon icon="mdi:chevron-left" class="w-4 h-4" aria-hidden="true" />
							</a>
							
							{/* Page Numbers */}
							{Array.from({ length: Math.min(5, totalPages) }, (_, i) => {
								const pageNum = i + 1;
								const isActive = pageNum === currentPage;
								return (
									<a 
										href={`?page=${pageNum}`}
										class={`px-3 py-2 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-900 ${
											isActive 
												? 'bg-red-500 text-white' 
												: 'bg-gray-700 hover:bg-gray-600 text-white'
										}`}
										aria-label={`Page ${pageNum}`}
										aria-current={isActive ? 'page' : undefined}
									>
										{pageNum}
									</a>
								);
							})}
							
							{/* Next Page */}
							<a 
								href={currentPage < totalPages ? `?page=${currentPage + 1}` : '#'}
								class={`px-3 py-2 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-900 ${
									currentPage < totalPages 
										? 'bg-gray-700 hover:bg-gray-600 text-white' 
										: 'bg-gray-800 text-gray-500 cursor-not-allowed'
								}`}
								aria-label="Next page"
								{...(currentPage >= totalPages && { 'aria-disabled': 'true' })}
							>
								<Icon icon="mdi:chevron-right" class="w-4 h-4" aria-hidden="true" />
							</a>
						</div>
					)}
				</section>

				<!-- FAQ SECTION -->
				<section aria-labelledby="faq-heading" class="mt-12" role="region">
					<h2 id="faq-heading" class="text-2xl mb-6 text-red-500">Frequently Asked Questions</h2>
					<div class="space-y-4">
						<div class="border border-gray-600 p-4">
							<h3 class="text-lg font-bold mb-2">Are these revenue operations tools really free?</h3>
							<p class="text-gray-300">Yes, all tools are completely free to use. No sign-up required, no hidden costs.</p>
						</div>
						<div class="border border-gray-600 p-4">
							<h3 class="text-lg font-bold mb-2">How do I use these revenue operations tools?</h3>
							<p class="text-gray-300">Click 'Run in ChatGPT (MIMR GPT)' to open our custom AI assistant. Then type the command shown (click to copy) to execute the specific tool with guided step-by-step instructions.</p>
						</div>
						<div class="border border-gray-600 p-4">
							<h3 class="text-lg font-bold mb-2">What makes these tools different?</h3>
							<p class="text-gray-300">Our tools work best with our custom GPT that asks you the right questions and walks you through each framework step-by-step. No more guessing what to input next.</p>
						</div>
						<div class="border border-gray-600 p-4">
							<h3 class="text-lg font-bold mb-2">Can I use these tools without the custom GPT?</h3>
							<p class="text-gray-300">Yes! Click on any tool to view the full framework content. You can copy and paste it into any AI platform, though our custom GPT provides the best guided experience.</p>
						</div>
					</div>
				</section>

		<script>
			// Simple, safe JavaScript for tools page
			document.addEventListener('DOMContentLoaded', function() {
				try {
					// Card click functionality
					document.querySelectorAll('.tool-card').forEach(function(card) {
						var toolId = card.getAttribute('data-tool-id');
						if (toolId) {
							card.addEventListener('click', function(e) {
								if (!(e.target as HTMLElement).closest('.ai-platform-btn')) {
									window.location.href = '/tools/' + toolId;
								}
							});
						}
					});
					
					// Inline search functionality
					var searchInput = document.getElementById('searchInput') as HTMLInputElement;
					var clearButton = document.getElementById('clearSearch') as HTMLButtonElement;
					var searchResults = document.getElementById('searchResults');
					var allTools = Array.from(document.querySelectorAll('.tool-card'));
					var debounceTimer: number | null = null;

					// Store original tools data for search
					var toolsData: any[] = [];
					
					// Extract tools data from DOM
					console.log('Found tool cards:', allTools.length);
					allTools.forEach(function(card) {
						var toolId = card.getAttribute('data-tool-id');
						var titleElement = card.querySelector('h3');
						var descriptionElement = card.querySelector('p');
						var categoryElement = card.querySelector('.bg-zinc-800');
						// Fix: escape the forward slash in CSS selector
						var tagsElements = card.querySelectorAll('[class*="bg-zinc-800/50"]');
						
						if (toolId && titleElement && descriptionElement) {
							toolsData.push({
								id: toolId,
								title: titleElement.textContent || '',
								description: descriptionElement.textContent || '',
								category: categoryElement?.textContent || '',
								tags: Array.from(tagsElements).map(el => el.textContent || ''),
								element: card
							});
						}
					});
					console.log('Extracted tools data:', toolsData.length, toolsData);

					// Search function
					function performSearch(query: string) {
						query = query.toLowerCase().trim();
						console.log('Performing search with query:', query);
						
						// Track search event
						if (query && window.posthog) {
							window.posthog.capture('tool_search_performed', {
								query: query,
								page: 'tools',
								timestamp: Date.now()
							});
						}
						
						if (!query) {
							// Show all tools
							allTools.forEach(function(card) {
								(card as HTMLElement).style.display = 'block';
							});
							updateResultsCount(allTools.length, '');
							console.log('Empty query, showing all tools:', allTools.length);
							return;
						}

						// Filter tools based on search query
						var matchingTools = toolsData.filter(function(tool) {
							var titleMatch = tool.title.toLowerCase().includes(query);
							var descMatch = tool.description.toLowerCase().includes(query);
							var catMatch = tool.category.toLowerCase().includes(query);
							var tagMatch = tool.tags.some((tag: string) => tag.toLowerCase().includes(query));
							var matches = titleMatch || descMatch || catMatch || tagMatch;
							
							if (matches) {
								console.log('Tool matches search:', tool.title, {
									titleMatch: titleMatch,
									descMatch: descMatch,
									catMatch: catMatch,
									tagMatch: tagMatch
								});
							}
							return matches;
						});

						console.log('Found matching tools:', matchingTools.length, matchingTools.map(t => t.title));

						// Show/hide tools based on search results
						allTools.forEach(function(card) {
							var toolId = card.getAttribute('data-tool-id');
							var isMatch = matchingTools.some(tool => tool.id === toolId);
							(card as HTMLElement).style.display = isMatch ? 'block' : 'none';
							console.log('Tool card display:', toolId, isMatch ? 'visible' : 'hidden');
						});

						updateResultsCount(matchingTools.length, query);
					}

					// Update results count display
					function updateResultsCount(count: number, query: string) {
						if (searchResults) {
							if (query) {
								searchResults.innerHTML = `
									<div>
										Found <span class="text-white font-medium">${count}</span> result${count !== 1 ? 's' : ''} for "<span class="text-red-400">${query}</span>"
									</div>
									<div class="text-xs">
										Press <kbd class="px-2 py-1 bg-gray-700 rounded text-xs">⌘K</kbd> to focus search
									</div>
								`;
							} else {
								searchResults.innerHTML = `
									<div>
										Showing <span class="text-white font-medium">${count}</span> tools
									</div>
									<div class="text-xs">
										Press <kbd class="px-2 py-1 bg-gray-700 rounded text-xs">⌘K</kbd> to focus search
									</div>
								`;
							}
						}
					}

					// Toggle clear button visibility
					function toggleClearButton(show: boolean) {
						if (clearButton) {
							if (show) {
								clearButton.classList.remove('hidden');
								clearButton.classList.add('flex');
							} else {
								clearButton.classList.add('hidden');
								clearButton.classList.remove('flex');
							}
						}
					}

					// Search input event handler
					if (searchInput) {
						searchInput.addEventListener('input', function(e) {
							var query = (e.target as HTMLInputElement).value;
							
							// Clear previous debounce timer
							if (debounceTimer) {
								clearTimeout(debounceTimer);
							}

							// Debounce search
							debounceTimer = window.setTimeout(function() {
								performSearch(query);
							}, 200);

							toggleClearButton(query.length > 0);
						});
					}

					// Clear button event handler
					if (clearButton) {
						clearButton.addEventListener('click', function() {
							if (searchInput) {
								searchInput.value = '';
								performSearch('');
								toggleClearButton(false);
								searchInput.focus();
							}
						});
					}
					
					// Keyboard shortcut: Cmd/Ctrl + K
					document.addEventListener('keydown', function(e) {
						if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
							e.preventDefault();
							if (searchInput) {
								searchInput.focus();
							}
						}
						
						// Escape to clear search
						if (e.key === 'Escape' && document.activeElement === searchInput) {
							if (searchInput && searchInput.value) {
								searchInput.value = '';
								performSearch('');
								toggleClearButton(false);
							}
						}
					});
			
			// Copyable command functionality
			document.querySelectorAll('.copyable-command').forEach(function(cmd) {
				cmd.addEventListener('click', async function(this: HTMLElement) {
					const command = this.getAttribute('data-command');
					if (!command) return;
					
					const originalText = this.innerHTML;
					
					try {
						await navigator.clipboard.writeText(command);
						
						// Visual feedback
						this.innerHTML = `
							<svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
							</svg>
							Copied!
						`;
						this.classList.add('bg-green-600', 'text-white');
						this.classList.remove('bg-gray-800', 'text-red-400');
						
						showToast('Command copied to clipboard!', 'success');
						
						// Reset after 2 seconds
						setTimeout(() => {
							this.innerHTML = originalText;
							this.classList.remove('bg-green-600', 'text-white');
							this.classList.add('bg-gray-800', 'text-red-400');
						}, 2000);
					} catch (err) {
						showToast('Failed to copy command.', 'error');
					}
				});
				
				// Keyboard support
				cmd.addEventListener('keydown', function(this: HTMLElement, e: Event) {
					const keyEvent = e as KeyboardEvent;
					if (keyEvent.key === 'Enter' || keyEvent.key === ' ') {
						e.preventDefault();
						this.click();
					}
				});
			});
			
			// AI Platform Button Functionality (Icon Buttons)
			document.querySelectorAll('.ai-platform-btn').forEach(function(btn) {
				let step = 1; // Track which step we're on
				
				btn.addEventListener('click', async function(this: HTMLElement) {
					const platform = this.getAttribute('data-platform');
					const toolId = this.getAttribute('data-tool-id');
					const toolTitle = this.getAttribute('data-tool-title');
					const url = this.getAttribute('data-url');
					const command = this.getAttribute('data-command');
					const originalText = this.innerHTML;
					const originalTitle = this.getAttribute('title');
					
					if (!platform || !command || !url) return;
					
					if (step === 1) {
						// Step 1: Copy command
					this.innerHTML = `
							<svg class="w-5 h-5 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
						</svg>
					`;
						this.title = 'Copying...';
					(this as HTMLButtonElement).disabled = true;
					
					try {
							await navigator.clipboard.writeText(command);
							
							// Change to step 2 state
								this.innerHTML = `
								<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
								</svg>
							`;
							this.title = `Click to open ${platform.charAt(0).toUpperCase() + platform.slice(1)}`;
							this.classList.remove('bg-gray-800', 'hover:bg-' + getButtonColor(platform) + '-600');
							this.classList.add('bg-green-600', 'hover:bg-green-700', 'animate-pulse');
							(this as HTMLButtonElement).disabled = false;
							step = 2;
							
							showToast(`Command copied! Now click to open ${platform.charAt(0).toUpperCase() + platform.slice(1)}`, 'success');
							
						} catch (err) {
							this.innerHTML = originalText;
							this.title = originalTitle || '';
							(this as HTMLButtonElement).disabled = false;
							showToast('Failed to copy command.', 'error');
						}
						
					} else if (step === 2) {
						// Step 2: Open platform
						this.innerHTML = `
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
									</svg>
						`;
						this.title = 'Opening...';
						
						// Open the platform
						window.open(url, '_blank', 'noopener,noreferrer');
						
						// Track the event
						if ((window as any).dataLayer) {
							(window as any).dataLayer.push({
								'event': 'ai_platform_launch',
								'platform': platform,
								'tool_id': toolId,
								'tool_title': toolTitle,
								'step': 'opened'
							});
						}
						
						showToast(`Opened ${platform.charAt(0).toUpperCase() + platform.slice(1)}! Paste the command there.`, 'info');
						
						// Reset after 3 seconds
						setTimeout(() => {
							this.innerHTML = originalText;
							this.title = originalTitle || '';
							this.classList.remove('bg-green-600', 'hover:bg-green-700', 'animate-pulse');
							this.classList.add('bg-gray-800', 'hover:bg-' + getButtonColor(platform) + '-600');
							step = 1;
						}, 3000);
					}
				});
			});
			
			// Unified Platform Selector (Approach 2)
			document.querySelectorAll('.unified-launch-btn').forEach(function(btn) {
				btn.addEventListener('click', async function(this: HTMLElement) {
					const toolId = this.getAttribute('data-tool-id');
					const toolTitle = this.getAttribute('data-tool-title');
					const card = this.closest('.tool-card');
					const selector = card?.querySelector('.unified-platform-selector') as HTMLSelectElement;
					
					if (!selector || !toolId) return;
					
					const selectedPlatform = selector.value;
					const originalText = this.innerHTML;
					
					// Platform URLs and commands
					const platformData = {
						chatgpt: {
							url: 'https://chat.openai.com/g/g-688d0d2733948191bc9f2f79cfc0aba2',
							command: `Run tool: ${toolId}`
						},
						claude: {
							url: 'https://claude.ai',
							command: `Load and execute this business framework: https://mimrgrowthlab.com/tools/${toolId}

My Business Context:
- Business Name: [YOUR_BUSINESS]
- Stage: [MVP/PMF/Scaling]
- Industry: [YOUR_INDUSTRY]
- Current Challenge: [SPECIFIC_CHALLENGE]

Please guide me through each section systematically.`
						},
						gemini: {
							url: 'https://gemini.google.com',
							command: `Analyze this business tool and guide me through it: https://mimrgrowthlab.com/tools/${toolId}

My Business Context:
- Business Name: [YOUR_BUSINESS]
- Stage: [MVP/PMF/Scaling]
- Industry: [YOUR_INDUSTRY]
- Current Challenge: [SPECIFIC_CHALLENGE]

Please execute each step and provide insights.`
						},
						perplexity: {
							url: 'https://perplexity.ai',
							command: `Research and execute this business framework: https://mimrgrowthlab.com/tools/${toolId}

My Business Context:
- Business Name: [YOUR_BUSINESS]
- Stage: [MVP/PMF/Scaling]
- Industry: [YOUR_INDUSTRY]
- Current Challenge: [SPECIFIC_CHALLENGE]

Combine tool execution with real-time research where relevant.`
						},
						grok: {
							url: 'https://x.com/i/grok',
							command: `Execute this growth tool step-by-step: https://mimrgrowthlab.com/tools/${toolId}

My Business Context:
- Business Name: [YOUR_BUSINESS]
- Stage: [MVP/PMF/Scaling]
- Industry: [YOUR_INDUSTRY]
- Current Challenge: [SPECIFIC_CHALLENGE]

Please provide quick insights and growth hacking suggestions.`
						}
					};
					
					const data = platformData[selectedPlatform as keyof typeof platformData];
					if (!data) return;
					
						this.innerHTML = `
						<svg class="w-3 h-3 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
							</svg>
						Copying...
					`;
					(this as HTMLButtonElement).disabled = true;
					
					try {
						await navigator.clipboard.writeText(data.command);
						
						this.innerHTML = `
							<svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
							</svg>
							Opening...
						`;
						
						// Open the platform
						setTimeout(() => {
							window.open(data.url, '_blank', 'noopener,noreferrer');
						}, 500);
						
						showToast(`Command copied! Opening ${selectedPlatform.charAt(0).toUpperCase() + selectedPlatform.slice(1)}...`, 'success');
						
						// Track the event
						if ((window as any).dataLayer) {
							(window as any).dataLayer.push({
								'event': 'unified_platform_launch',
								'platform': selectedPlatform,
								'tool_id': toolId,
								'tool_title': toolTitle
							});
						}
						
						// Reset after 3 seconds
					setTimeout(() => {
						this.innerHTML = originalText;
						(this as HTMLButtonElement).disabled = false;
						}, 3000);
						
					} catch (err) {
						this.innerHTML = originalText;
						(this as HTMLButtonElement).disabled = false;
						showToast('Failed to copy command.', 'error');
					}
				});
			});
			
			// AI Platform Minimal Button Functionality (New Article Cards)
			document.querySelectorAll('.ai-platform-btn-minimal').forEach(function(btn) {
				btn.addEventListener('click', async function(this: HTMLElement, e: Event) {
					e.stopPropagation(); // Prevent card click navigation
					
					const platform = this.getAttribute('data-platform');
					const toolId = this.getAttribute('data-tool-id');
					const toolTitle = this.getAttribute('data-tool-title');
					const url = this.getAttribute('data-url');
					const command = this.getAttribute('data-command');
					const originalHTML = this.innerHTML;
					
					if (!platform || !command || !url) return;
					
					try {
						// Visual feedback
						this.innerHTML = `<svg class="w-4 h-4 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg>`;
						(this as HTMLButtonElement).disabled = true;
						
						// Copy command to clipboard
						await navigator.clipboard.writeText(command);
						
						// Update to success state
						this.innerHTML = `<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>`;
						
						// Open platform after short delay
						setTimeout(() => {
							window.open(url, '_blank', 'noopener,noreferrer');
						}, 300);
						
						showToast(`Copied command and opening ${platform.charAt(0).toUpperCase() + platform.slice(1)}!`, 'success');
						
						// Track the event
						if ((window as any).dataLayer) {
							(window as any).dataLayer.push({
								'event': 'ai_platform_minimal_launch',
								'platform': platform,
								'tool_id': toolId,
								'tool_title': toolTitle
							});
						}
						
						// Reset after 2 seconds
						setTimeout(() => {
							this.innerHTML = originalHTML;
						(this as HTMLButtonElement).disabled = false;
					}, 2000);
						
					} catch (err) {
						this.innerHTML = originalHTML;
						(this as HTMLButtonElement).disabled = false;
						showToast('Failed to copy command.', 'error');
					}
				});
			});
			
			// Helper function to get button colors for different platforms
			function getButtonColor(platform: string): string {
				const colors = {
					chatgpt: 'green',
					claude: 'orange',
					gemini: 'blue',
					perplexity: 'purple',
					grok: 'gray'
				};
				return colors[platform as keyof typeof colors] || 'gray';
			}
			
			// Toast notification system
			function showToast(message: string, type = 'info') {
				const toast = document.createElement('div');
				toast.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full ${
					type === 'success' ? 'bg-green-600 text-white' :
					type === 'error' ? 'bg-red-600 text-white' :
					'bg-gray-800 text-white'
				}`;
				toast.innerHTML = `
					<div class="flex items-center gap-2">
						${type === 'success' ? '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>' :
						type === 'error' ? '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>' :
						'<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>'}
						<span>${message}</span>
					</div>
				`;
				
				document.body.appendChild(toast);
				
				// Animate in
				setTimeout(() => {
					toast.classList.remove('translate-x-full');
				}, 100);
				
				// Auto remove after 4 seconds
				setTimeout(() => {
					toast.classList.add('translate-x-full');
					setTimeout(() => {
						document.body.removeChild(toast);
					}, 300);
				}, 4000);
			}
			
		} catch (error) {
			console.error('Error in tools page JavaScript:', error);
		}
	});
</script>
	</body>
</html> 